@model BookStoreProject.Models.Customer

@{
    ViewBag.Title = "Register";
}
<h2 style="color:aliceblue">Register</h2>

<br />
<style>
   
    .input1{
            display: block;
    width: 100%;
    height: calc(1.5em + 0.75rem + 2px);
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid #ced4da;
    border-radius: 0.25rem;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    .getcover {
        background-size: cover;
    
        background-image: url('../../logos/register.jfif');
        height: 100%;
    }
    .overload{
        background-color:rgba(0,0,0,0.8);
        height:100%;
        width:100%;
       
        
    }
   footer p {
       color:aliceblue;
   }
   .resize{
         width: 350px !important  ;
   }
   
</style>
<div style="width:100%;height:100%">
    <div class="col-md-12">

   
        @using (Html.BeginForm("Register", "Customer", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {


            <div class="row">
              
                    @Html.LabelFor(x => x.CustomerName, htmlAttributes: new { @class = "control-lable col-md-4", @style = " color:aliceblue" })
                    <div class="col-md-8">
                        @Html.EditorFor(x => x.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.CustomerName, "", new { @class = "text-danger" })
                    </div>
          
            </div>
            <br />
            <div class="row">
              
                    @Html.LabelFor(x => x.CustomerEmail, htmlAttributes: new { @class = "control-lable col-md-4", @style = " color:aliceblue" })
                    <div class="col-md-8">
                        @Html.EditorFor(x => x.CustomerEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.CustomerEmail, "", new { @class = "text-danger" })
                    </div>
              
            </div>
            <br />
            <div class="row">
               
                    @Html.LabelFor(x => x.CustomerUsename, htmlAttributes: new { @class = "control-lable col-md-4", @style = " color:aliceblue" })
                    <div class="col-md-8">
                        @Html.EditorFor(x => x.CustomerUsename, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.CustomerUsename, "", new { @class = "text-danger" })
            
                </div>
            </div>
            <br />
            <div class="row">

                @Html.LabelFor(x => x.CustomerPassword, htmlAttributes: new { @class = "control-lable col-md-4", @style = " color:aliceblue" })
                <div class="col-md-8">
                    @Html.PasswordFor(x => x.CustomerPassword, new { @id = "pbPassword", @class = "input1" })
                    @Html.ValidationMessageFor(x => x.CustomerPassword, "", new { @class = "text-danger" })

                </div>
            </div>
            <br />
            <div class="row">
                
                    @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-lable col-md-4", @style = " color:aliceblue" })
                <div class="col-md-8">
                    <input class="form-control margin" type="password" name="ConfirmPassword" />
                    @if (ViewBag.confirmisfalse == true)
                    {

                        <div class="alert-danger">Password And Confirm Password Not Same</div>
                    }
                    </div>
                </div>

            <br />
            if (ViewBag.isexist == true)
            {

                <div class="alert-danger">This Person Is Exist</div>
            }
            <div class="row ">
                <input class="btn btn-block btn-danger" type="submit" value="Register" />
            </div>
        }
    </div>
    
</div>
<div class="clearfix"></div>
